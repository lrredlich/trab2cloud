Aluna: Luciana Rosa Redlich
Trabalho de 2 - INF2920 Computação em Nuvem

Para o trabalho foi utilizado como dataset as obras de Machado de Assis que está na pasta input.
Todo o código foi publicado no gitHub e esta disponível em : dga  jfklahfjkah
Foram desenvolvidos 4 aplicativos para a arquitetura  de MapReduce que serão detalhados mais adiante. Os algoritmos de Map e reduce das aplicações foram feitos em ruby e executados na plataforma de Nuvem da Amazon (elastic MapReduce). Para armazenar os dados (input, output e códigos) foi utilizado o S3 da amazon. 
Execução das aplicações:
Na plataforma da amazon podemos escolher a quantidade de instancias  para a execucao da aplicacao. Se escolhermos n instancias, o problema será dividido em n partes e para cada parte será gerado um output pelo algoritmo de reduce. Para que as aplições possual somente um aquivo de output, cada aplicação foi executada como um JOB FLOW com dois steps, onde no primeiro passo (step 1 ) os arquivos de entrada sao passados para o algoritmo de map e reduce e sao geradas n saidas intermediarias que por sua vez sao passadas para o passo 2 (step 2) que executa um novo algoritmo de reduce juntando todos os outputs intermediarios em  um só e gerando uma única saída.
Os JOBs foram criados e executados com o Ruby client. Para isso foram desenvolvidos scripts para a execução de cada aplicação. Esses podem ser encontrados em  trab2cloud\scripts
1-Contagem de total de palavras:
Idéia Geral :
Algoritmo de map: map_total_palavras.rb  ->  Separa cada uma das palavras dos arquivos de entrada e gera para para casa palavra um par <key, value> com os valores < "palavra", 1 >
Algoritmo de reduce : reduce_total_palavras.rb -> conta todas as ocorrências do  par <"palavra", 1>.
Execução :
 	- 2 instâncias( um mestre e um trabalhador) -> durou 16 minuto -> Saída :trab2cloud\out\totalPalavras\1instancia\part-00000
	- 16 instâncias (um mestre e 15 trabalhadores) -> 6 minutos -> saída : trab2cloud\out\totalPalavras\variasInstacias\part-00003
Resultado : 2397787	
2-Contagem da palavra mais utilizada:
Idéia Geral :
Algoritmo de map: map_total_palavras.rb  ->  Separa cada uma das palavras dos arquivos de entrada e gera para para casa palavra um par <key, value> com os valores < palavra encontrada, 1 >
Algoritmo de reduce : reduce_total_palavras.rb -> conta todas as ocorrências da mesma palavra  e procura a que ocorre mais vezes. 
Execução :
	- 2 instâncias( um mestre e um trabalhador) -> 15 minutos ->  saída: trab2cloud\out\palavra+usada\1instancia\part-00000

	- 15 instâncias (um mestre e 14 trabalhadores) -> 5 minutos -> saída: trab2cloud\out\palavra+usada\15instancias\part-00000
Resultado :palavra  o com 159637	
3-Contagem das 10 palavras mais utilizadas:
Idéia Geral :
Algoritmo de map: map_total_palavras.rb  ->  Separa cada uma das palavras dos arquivos de entrada e gera para para casa palavra um par <key, value> com os valores < palavra encontrada, 1 >
Algoritmo de reduce : reduce_total_palavras.rb -> conta todas as ocorrências da mesma palavra  e procura as 10 que ocorrem mais vezes que ocorre mais vezes armazenando em um vetor. 
Execução :
	- 2 instâncias( um mestre e um trabalhador) -> 17 minutos -> saída : trab2cloud\out\10palavras+usadas\1instancia\part-00000
	- 15 instâncias (um mestre e 14 trabalhadores) -> 5 minutos -> saída : trab2cloud\out\10palavras+usadas\15instancias\part-00000

Resultado :  o 159637,  a 100128, de 73800, e 67349, n 42758, se 30861, um 27230, do 26848, da 23948, os 23176.

4-Contagem das palavras morte e vida:
Idéia Geral :
Algoritmo de map: map_total_palavras.rb  ->  Separa  as palavras morte e vida gerando para cada uma dessas 2 palavras encontradas  um par <key, value> com os valores < vida, 1 > ou morte
Algoritmo de reduce : reduce_total_palavras.rb -> conta todas as ocorrências da mesma palavra e exibe a quantidade de palavras vida e morte. 
Execução :
	- 2 instâncias( um mestre e um trabalhador) -> 14 minutos  -> saída : trab2cloud\out\morteVida\1instancia\part-00000
	- 15 instâncias (um mestre e 14 trabalhadores) -> 5 minutos -> saída:  trab2cloud\out\morteVida\15instancias\part-00000
Resultado :  morte 1073	vida 3179	
	

 